{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "project": "./tsconfig.json",
      "ecmaVersion": 2020,
      "sourceType": "module",
      "ecmaFeatures": {
        "jsx": true,
        "impliedStrict": true
      }
    },
    "plugins": [
      "@typescript-eslint",
      "eslint-plugin-import",
      "eslint-plugin-react",
      "eslint-plugin-react-hooks"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:react/recommended",
      "plugin:compat/recommended",
      "plugin:prettier/recommended" // Prettier must always be the last plugin to proper use with eslint --fix
    ],
    "root": true,
    "env": {
      "node": true,
      "jest": true,
      "browser": true
    },
    "ignorePatterns": ["node_modules/", "dist/", "public/"],
    "rules": {
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/prefer-optional-chain": "error",
      "@typescript-eslint/no-unnecessary-condition": "warn",
      "react/jsx-no-useless-fragment": "warn",
      "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "enum",
          "format": ["PascalCase"]
        },
        {
          "selector": "enumMember",
          "format": ["PascalCase"]
        }
      ],
      "no-restricted-imports": [
        "error",
        {
          "paths": [
            {
              "name": "react-router-dom",
              "importNames": ["useHistory", "useLocation"],
              "message": "Use wrappers from src/appHistory.ts instead"
            }
          ]
        }
      ],
      "@typescript-eslint/explicit-function-return-type": [
        "error",
        {
          "allowExpressions": true
        }
      ],
      "no-console": 2,
      "no-fallthrough": 2,
      "prefer-destructuring": [
        "error",
        {
          "object": true,
          "array": false
        }
      ],
      "no-await-in-loop": "error",
      "no-alert": "error",
      "react-hooks/rules-of-hooks": "error",
      "curly": "error",
      "import/order": [
        "error",
        {
          "groups": [["external", "builtin"], "internal", ["parent", "sibling", "index"]]
        }
      ]
    },
    "settings": {
      "react": {
        "version": "detect"
      }
    }
  }